openapi: 3.0.1
info:
  title: School REST API
  description: 'Tomas Pasiecznik | Homework: Module 3 (IS 421-002)'
  termsOfService: http://swagger.io/terms/
  contact:
    email: tp253@njit.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://module-3-homework.swagger.io/v2
- url: http://module-3-homework.swagger.io/v2
tags:
- name: user_management
  description: 'Purpose: The users that are members of the school.'
- name: course_management
  description: 'Purpose: The courses students take e.g. title, description and content.'
- name: course_assignment_management
  description: 'Purpose: Allowing assignments to be added to courses.'
- name: course_section_management
  description: 'Purpose: Allowing sections to be created to enroll teachers and students
    in.'
- name: section_enrollment_management
  description: 'Purpose: Allowing students and teachers to be assigned to courses.'
- name: section_assignment_submission_management
  description: 'Purpose: Allowing assignments to be submitted in a section and graded.'
paths:
  /user_management:
    get:
      tags:
      - user_management
      summary: Get Users
      description: Browse All Users OR Retrieve One User
      operationId: getUser
      parameters:
      - name: User
        in: query
        description: A member of the school.
        schema:
          type: string
      responses:
        400:
          description: Invalid user
          content: {}
  /user_management/:
    put:
      tags:
      - user_management
      summary: Edit User
      description: Edit One User
      operationId: putUser
      parameters:
      - name: User
        in: query
        description: A member of the school.
        schema:
          type: string
      responses:
        400:
          description: Invalid user
          content: {}
  /user_management/delete:
    delete:
      tags:
      - user_management
      summary: Delete User
      description: Delete One User
      operationId: deleteUser
      parameters:
      - name: User
        in: query
        description: A member of the school.
        schema:
          type: string
      responses:
        400:
          description: Invalid user
          content: {}
  /course_management:
    get:
      tags:
      - course_management
      summary: Get Courses
      description: Browse All Courses OR Retrieve One Course
      operationId: getCourse
      parameters:
      - name: Course
        in: query
        description: A course a student takes.
        schema:
          type: string
      responses:
        400:
          description: Invalid course
          content: {}
  /course_management/:
    put:
      tags:
      - course_management
      summary: Edit Course
      description: Edit One Course
      operationId: putCourse
      parameters:
      - name: Course
        in: query
        description: A course a student takes.
        schema:
          type: string
      responses:
        400:
          description: Invalid course
          content: {}
  /course_management/delete:
    delete:
      tags:
      - course_management
      summary: Delete Course
      description: Delete One Course
      operationId: deleteCourse
      parameters:
      - name: Course
        in: query
        description: A course a student takes.
        schema:
          type: string
      responses:
        400:
          description: Invalid course
          content: {}
  /course_assignment_management:
    get:
      tags:
      - course_assignment_management
      summary: Get Assignments
      description: Browse All Assignments OR Retrieve One Assignment
      operationId: getAssignment
      parameters:
      - name: Assignment
        in: query
        description: An assignment to be added to courses.
        schema:
          type: string
      responses:
        400:
          description: Invalid assignment
          content: {}
  /course_assignment_management/:
    put:
      tags:
      - course_assignment_management
      summary: Edit Assignment
      description: Edit One Assignment
      operationId: putAssignment
      parameters:
      - name: Assignment
        in: query
        description: An assignment to be added to courses.
        schema:
          type: string
      responses:
        400:
          description: Invalid assignment
          content: {}
  /course_assignment_management/delete:
    delete:
      tags:
      - course_assignment_management
      summary: Delete Assignment
      description: Delete One Assignment
      operationId: deleteAssignment
      parameters:
      - name: Assignment
        in: query
        description: An assignment to be added to courses.
        schema:
          type: string
      responses:
        400:
          description: Invalid assignment
          content: {}
  /course_section_management:
    get:
      tags:
      - course_section_management
      summary: Get Sections
      description: Browse All Sections OR Retrieve One Section
      operationId: getSection
      parameters:
      - name: Section
        in: query
        description: A section to enroll teachers and students in.
        schema:
          type: string
      responses:
        400:
          description: Invalid section
          content: {}
  /course_section_management/:
    put:
      tags:
      - course_section_management
      summary: Edit Section
      description: Edit One Section
      operationId: putSection
      parameters:
      - name: Section
        in: query
        description: A section to enroll teachers and students in.
        schema:
          type: string
      responses:
        400:
          description: Invalid section
          content: {}
  /course_section_management/delete:
    delete:
      tags:
      - course_section_management
      summary: Delete Section
      description: Delete One Section
      operationId: deleteSection
      parameters:
      - name: Section
        in: query
        description: A section to enroll teachers and students in.
        schema:
          type: string
      responses:
        400:
          description: Invalid section
          content: {}
  /section_enrollment_management:
    get:
      tags:
      - section_enrollment_management
      summary: Get Sections
      description: Browse All Sections OR Retrieve One Section
      operationId: getSectionEnrollment
      parameters:
      - name: Section
        in: query
        description: A section to assign teachers and students to.
        schema:
          type: string
      responses:
        400:
          description: Invalid section
          content: {}
  /section_enrollment_management/:
    put:
      tags:
      - section_enrollment_management
      summary: Edit Section
      description: Edit One Section
      operationId: putSectionEnrollment
      parameters:
      - name: Section
        in: query
        description: A section to assign teachers and students to.
        schema:
          type: string
      responses:
        400:
          description: Invalid section
          content: {}
  /section_enrollment_management/delete:
    delete:
      tags:
      - section_enrollment_management
      summary: Delete Section
      description: Delete One Section
      operationId: deleteSectionEnrollment
      parameters:
      - name: Section
        in: query
        description: A section to assign teachers and students to.
        schema:
          type: string
      responses:
        400:
          description: Invalid section
          content: {}
  /section_assignment_submission_management:
    get:
      tags:
      - section_assignment_submission_management
      summary: Get Assignment Submissions
      description: Browse All Assignments OR Retrieve One Assignment
      operationId: getAssignmentSubmission
      parameters:
      - name: Assignment
        in: query
        description: An assignment submission.
        schema:
          type: string
      responses:
        400:
          description: Invalid assignment submission
          content: {}
  /section_assignment_submission_management/:
    put:
      tags:
      - section_assignment_submission_management
      summary: Edit Assignment Submission
      description: Edit One Assignment
      operationId: putAssignmentSubmission
      parameters:
      - name: Assignment
        in: query
        description: An assignment submission.
        schema:
          type: string
      responses:
        400:
          description: Invalid assignment submission
          content: {}
  /section_assignment_submission_management/delete:
    delete:
      tags:
      - section_assignment_submission_management
      summary: Delete Assignment Submission
      description: Delete One Assignment Submission
      operationId: deleteAssignmentSubmission
      parameters:
      - name: Assignment
        in: query
        description: An assignment submission.
        schema:
          type: string
      responses:
        400:
          description: Invalid assignment submission
          content: {}
components: {}
